[[plugins]]
repo = 'Shougo/dein.vim'

# カーソル位置のコンテキストに合わせてftを切り替える
[[plugins]]
repo = 'osyo-manga/vim-precious'
on_event = ['CursorMoved', 'InsertEnter']
depends = ['context_filetype.vim']
hook_add = '''
 let g:precious_enable_switchers = {
       \  'defx': {'setfiletype': 0},
       \  'denite': {'setfiletype': 0}
       \  }
'''

# カーソル位置のコンテキストのftを判断する
[[plugins]]
repo = 'Shougo/context_filetype.vim'

# colorscheme
[[plugins]]
repo = 'ghifarit53/tokyonight-vim'
hook_add = '''
  let g:tokyonight_style = 'night'
  let g:tokyonight_enable_italic = 1
  let g:tokyonight_transparent_background = 1
'''

# ステータスラインの改造
[[plugins]]
repo = 'itchyny/lightline.vim'
depends = ['vim-fugitive', 'lightline-ale']
hook_add = '''
  source ~/.config/nvim/plugins/lightline.vim
'''

# lightlineにaleのstatusを表示する補助プラグイン
[[plugins]]
repo = 'maximbaz/lightline-ale'
depends = ['lightline.vim', 'ale']

# インデントの可視化
[[plugins]]
repo = 'Yggdroot/indentLine'
hook_add = '''
  let g:indentLine_char = '|'
  let g:indentLine_faster = 1
  let g:indentLine_concealcursor = ''
'''

[[plugins]]
repo = 'windwp/nvim-autopairs'
on_event = 'InsertEnter'
hook_add = '''
  lua << EOF
require('nvim-autopairs').setup()

local remap = vim.api.nvim_set_keymap
local npairs = require('nvim-autopairs')

-- skip it, if you use another global object
_G.MUtils= {}

vim.g.completion_confirm_key = ""
MUtils.completion_confirm=function()
  if vim.fn.pumvisible() ~= 0  then
    if vim.fn.complete_info()["selected"] ~= -1 then
      return npairs.esc("<c-y>")
    else
      return npairs.check_break_line_char()
    end
  else
    return npairs.check_break_line_char()
  end
end

remap('i' , '<CR>','v:lua.MUtils.completion_confirm()', {expr = true , noremap = true})
EOF
'''
[[plugins]]
repo = 'airblade/vim-gitgutter'

# ウィンドウサイズの変更
[[plugins]]
repo = 'simeji/winresizer'

# コメントアウト補助
[[plugins]]
repo = 'tyru/caw.vim'
hook_add = '''
  " 行の最初の文字の前にコメント文字をトグル
  nmap <Leader>c <Plug>(caw:hatpos:toggle)j
  vmap <Leader>c <Plug>(caw:hatpos:toggle)j
  " 行頭にコメントをトグル
  nmap <Leader>C <Plug>(caw:zeropos:toggle)j
  vmap <Leader>C <Plug>(caw:zeropos:toggle)j
'''

[[plugins]]
repo = 'JuliaEditorSupport/julia-vim'
on_ht = ['julia']
hook_add = '''
  let g:latex_to_unicode_tab = 0
  let g:latex_to_unicode_eager = 0
  let g:latex_to_unicode_suggestions = 0
  let g:latex_to_unicode_file_types_blacklist = ".*"
'''

[[plugins]]
repo = 'phaazon/hop.nvim'
hook_add = '''
  nnoremap ff :HopWord<CR>
  nnoremap fl :HopLine<CR>
'''

[[plugins]]
repo = 'nvim-treesitter/nvim-treesitter'
on_event = 'BufRead'
hook_add = '''
lua << EOF
  require('nvim-treesitter.configs').setup {
    highlight = {
      enable = true,
      disable = {},
    },
  }
EOF
'''
