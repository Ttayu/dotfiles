[[plugins]]
repo = 'Shougo/dein.vim'

[[plugins]]
repo = "vim-denops/denops.vim"

[[plugins]]
repo = 'Shougo/pum.vim'
hook_source = '''
  call pum#set_option('max_width', float2nr(&columns * 0.5))
'''

# カーソル位置のコンテキストに合わせてftを切り替える
[[plugins]]
repo = 'osyo-manga/vim-precious'
on_event = ['CursorMoved', 'InsertEnter']
depends = ['context_filetype.vim']
hook_add = '''
 let g:precious_enable_switchers = {
       \  'defx': {'setfiletype': 0},
       \  'denite': {'setfiletype': 0}
       \  }
'''

# カーソル位置のコンテキストのftを判断する
[[plugins]]
repo = 'Shougo/context_filetype.vim'

# colorscheme
[[plugins]]
repo = 'folke/tokyonight.nvim'
hook_add = '''
  let g:tokyonight_style = "night"
  let g:tokyonight_transparent = v:true
'''

# ステータスラインの改造
[[plugins]]
repo = 'itchyny/lightline.vim'
depends = ['vim-fugitive', 'lightline-lsp']
hook_add = '''
  source ~/.config/nvim/plugins/lightline.vim
'''

# lightlineにbuildin lspのstatusを表示する補助プラグイン
[[plugins]]
repo = 'spywhere/lightline-lsp'
depends = ['lightline.vim']

# インデントの可視化
[[plugins]]
repo = 'Yggdroot/indentLine'
hook_add = '''
  let g:indentLine_char = '|'
  let g:indentLine_faster = 1
  let g:indentLine_concealcursor = ''
'''

[[plugins]]
repo = 'windwp/nvim-autopairs'
on_event = 'InsertEnter'
depends = ['pum.vim']
hook_add = '''
lua << EOF
  require('nvim-autopairs').setup()

  local remap = vim.api.nvim_set_keymap
  local npairs = require('nvim-autopairs')

  -- skip it, if you use another global object
  _G.MUtils= {}

  vim.g.completion_confirm_key = ""
  MUtils.completion_confirm=function()
    if vim.api.nvim_eval('pum#visible()') ~= 0  then
      if vim.api.nvim_eval('pum#complete_info()')["selected"] ~= -1 then
        return vim.api.nvim_eval('pum#map#confirm()')
      else
        vim.api.nvim_eval('pum#map#cancel()')
        return npairs.check_break_line_char()
      end
    else
      return npairs.check_break_line_char()
    end
  end

  remap('i' , '<CR>','v:lua.MUtils.completion_confirm()', {expr = true , noremap = true})
EOF
'''

[[plugins]]
repo = 'airblade/vim-gitgutter'

# ウィンドウサイズの変更
[[plugins]]
repo = 'simeji/winresizer'

# コメントアウト補助
[[plugins]]
repo = 'tyru/caw.vim'
hook_add = '''
  " 行の最初の文字の前にコメント文字をトグル
  nmap <Leader>c <Plug>(caw:hatpos:toggle)j
  vmap <Leader>c <Plug>(caw:hatpos:toggle)j
  " 行頭にコメントをトグル
  nmap <Leader>C <Plug>(caw:zeropos:toggle)j
  vmap <Leader>C <Plug>(caw:zeropos:toggle)j
'''

[[plugins]]
repo = 'phaazon/hop.nvim'
hook_add = '''
lua << EOF
  require'hop'.setup()
EOF
  nnoremap ff :HopWord<CR>
  nnoremap fl :HopLine<CR>
'''

[[plugins]]
repo = 'nvim-treesitter/nvim-treesitter'
on_event = 'BufRead'
hook_add = '''
lua << EOF
  require('nvim-treesitter.configs').setup {
    highlight = {
      enable = true,
      disable = {},
    },
  }
EOF
  set foldmethod=expr
  set foldexpr=nvim_treesitter#foldexpr()
  set foldlevel=99
'''

[[plugins]]
repo = 'anuvyklack/nvim-keymap-amend'

[[plugins]]
repo = 'anuvyklack/pretty-fold.nvim'
hook_add = '''
  lua << EOF
  require('pretty-fold').setup()
EOF
'''

[[plugins]]
repo = 'anuvyklack/fold-preview.nvim'
hook_add = '''
  lua << EOF
  require('fold-preview').setup()
EOF
'''
