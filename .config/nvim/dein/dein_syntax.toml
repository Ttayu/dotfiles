[[plugins]]
repo = 'JuliaEditorSupport/julia-vim'
on_ft = ['julia', 'r']
hook_add = '''
  let g:latex_to_unicode_tab = 1
  let g:latex_to_unicode_auto = 1
  let g:latex_to_unicode_eager = 0
  let g:latex_to_unicode_suggestions = 0
  let g:latex_to_unicode_file_types_blacklist = ".*"
'''

[[plugins]]
repo = 'lervag/vimtex'
on_ft = ['tex']
hook_add = '''
  let g:vimtex_compiler_latexmk_engines = {'_': '-pdfdvi'}
  let g:tex_flavor = 'latex'
  let g:vimtex_quickfix_open_on_warning = 0
  if has('mac')
    let g:vimtex_view_general_viewer = '/Applications/Skim.app/Contents/SharedSupport/displayline'
    let g:vimtex_view_general_options = '@line @pdf @tex'
  else
    let g:vimtex_view_general_viewer = 'evince'
  endif
'''

[[plugins]]
repo = 'udalov/kotlin-vim'
on_ft = ['kotlin']
hook_add = '''
  autocmd FileType kotlin setlocal sw=4 sts=4 ts=4 et
'''

[[plugins]]
repo = 'jalvesaq/Nvim-R'
on_ft = ['r']
hook_add = '''
  let g:R_auto_start = 0
  let g:R_insert_mode_cmds = 0
'''

[[plugins]]
repo = 'mattn/emmet-vim'
on_ft = ['html', 'css', 'javascript', 'javascriptreact', 'typescript', 'typescriptreact']
hook_source = '''
  let g:user_emmet_install_global = 0
  let g:user_emmet_settings = {
       \ 'javascript': {
       \   'extends': 'jsx',
       \ },
       \ 'typescript': {
       \   'extends': 'jsx',
       \ },
       \}
  autocmd FileType html,css,javascript,javascript,javascriptreact,typescript,typescriptreact EmmetInstall
'''

[[plugins]]
repo = 'jparise/vim-graphql'
on_ft = ['graphql', 'qql', 'Relay.QL', 'javascript', 'javascriptreact', 'typescript', 'typescriptreact']

[[plugins]]
repo = 'ap/vim-css-color'
on_ft = ['css']

[[plugins]]
repo = 'iamcco/markdown-preview.nvim'
on_ft = ['markdown']
build = 'cd app && yarn install'
hook_add = '''
  let g:mkdp_preview_options = {
        \ 'mkit': {
        \   'breaks': v:true
        \ }
        \}
'''

[[plugins]]
repo = 'dhruvasagar/vim-table-mode'
on_ft = ['markdown']

[[plugins]]
repo = 'ekickx/clipboard-image.nvim'
on_ft = ['markdown']
lua_source = '''
  require("clipboard-image").setup({
    default = {
      img_dir = {"%:p:h", "contents"},
      img_dir_txt = "./contents"
    }
  })
'''

[[plugins]]
repo = 'Decodetalkers/csv-tools.lua'
on_ft = ['csv']
lua_source = '''
  require("csvtools").setup({
    showoverflow = false
  })
'''
