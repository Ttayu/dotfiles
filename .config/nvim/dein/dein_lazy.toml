[[plugins]]
repo = 'raghur/fruzzy'
on_source = ['denite.nvim']
hook_source = '''
  let g:fruzzy#sortonempty = 0
'''
hook_post_update = '''
  call fruzzy#install()
'''

# linter実行プラグイン
[[plugins]]
repo = 'w0rp/ale'
hook_add = '''
  source ~/.config/nvim/plugins/ale.vim
'''

# vim用補完フレームワーク
[[plugins]]
repo = 'Shougo/deoplete.nvim'
depends = 'context_filetype.vim'
on_event = 'InsertEnter'
hook_source = '''
  source ~/.config/nvim/plugins/deoplete.vim
'''

# neosnippet
[[plugins]]
repo = 'Shougo/neosnippet'
depends = ['neosnippet-snippets', 'context_filetype.vim']
on_event = 'InsertCharPre'
on_ft = 'snippet'
on_source = ['denite.nvim']
hook_source = '''
  source ~/.config/nvim/plugins/neosnippet.vim
'''

[[plugins]]
repo = 'Shougo/neosnippet-snippets'

# file viewer
[[plugins]]
repo = 'Shougo/defx.nvim'
hook_add = '''
  nnoremap <silent> ,n :<C-u>Defx<CR>
'''
hook_source = '''
  source ~/.config/nvim/plugins/defx.vim
'''

[[plugins]]
repo = 'Shougo/neoyank.vim'
on_event = 'TextYankPost'
on_source = ['denite.nvim']

# ファイルランチャー
[[plugins]]
repo = 'Shougo/denite.nvim'
on_cmd = 'Denite'
hook_add = '''
  source ~/.config/nvim/plugins/denite_add.vim
'''
hook_source = '''
  source ~/.config/nvim/plugins/denite_source.vim
'''

# git操作
[[plugins]]
repo = 'tpope/vim-fugitive'
hook_add = '''
  source ~/.config/nvim/plugins/fugitive.vim
'''

# quickrun
[[plugins]]
repo = 'thinca/vim-quickrun'
hook_add = '''
  source ~/.config/nvim/plugins/quickrun.vim
'''

# gtagsを非同期で自動更新
[[plugins]]
repo = 'jsfaint/gen_tags.vim'
hook_add = '''
  " ctags, gtagsを自動で生成，更新
  let g:gen_tags#ctags_auto_gen = 1
  let g:gen_tags#gtags_auto_gen = 1
'''

# syntax
# toml
[[plugins]]
repo = 'cespare/vim-toml'
on_ft = ['toml']

# markdown
[[plugins]]
repo = 'rcmdnk/vim-markdown'
on_ft = ['md', 'markdown']

# vim-script
[[plugins]]
repo = 'Shougo/neco-vim'
on_ft = ['vim']

# cmake
[[plugins]]
repo = 'deoplete-plugins/deoplete-clang'
on_ft = ['cmake']
depends = ['deoplete.nvim']
hook_source = '''
  let g:deoplete#sources#clang#libclang_path = '/Library/Developer/CommandLineTools/usr/lib/libclang.dylib'
  let g:deoplete#sources#clang#clang_header = '/Library/Developer/CommandLineTools/usr/lib/clang'
'''

# zsh
[[plugins]]
repo = 'deoplete-plugins/deoplete-zsh'
on_ft = ['zsh', 'sh']
