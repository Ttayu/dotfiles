[[plugins]]
repo = 'raghur/fruzzy'
on_source = ['denite.nvim']
hook_source = '''
  let g:fruzzy#sortonempty = 0
'''
hook_post_update = '''
  call fruzzy#install()
'''

# linter実行プラグイン
[[plugins]]
repo = 'w0rp/ale'
hook_add = '''
  source ~/.config/nvim/plugins/ale.vim
'''

# neosnippet
[[plugins]]
repo = 'Shougo/neosnippet'
depends = ['neosnippet-snippets', 'context_filetype.vim']
on_event = 'InsertCharPre'
on_ft = 'snippet'
on_source = ['denite.nvim']
hook_source = '''
  source ~/.config/nvim/plugins/neosnippet.vim
'''

[[plugins]]
repo = 'Shougo/neosnippet-snippets'

# file viewer
[[plugins]]
repo = 'Shougo/defx.nvim'
hook_add = '''
  nnoremap <silent> ,n :<C-u>Defx<CR>
'''
hook_source = '''
  source ~/.config/nvim/plugins/defx.vim
'''

[[plugins]]
repo = 'Shougo/neoyank.vim'
on_event = 'TextYankPost'
on_source = ['denite.nvim']

# ファイルランチャー
[[plugins]]
repo = 'Shougo/denite.nvim'
on_cmd = 'Denite'
hook_add = '''
  source ~/.config/nvim/plugins/denite_add.vim
'''
hook_source = '''
  source ~/.config/nvim/plugins/denite_source.vim
'''

# git操作
[[plugins]]
repo = 'tpope/vim-fugitive'
hook_add = '''
  source ~/.config/nvim/plugins/fugitive.vim
'''

[[plugins]]
repo = 'skywind3000/asyncrun.vim'
on_cmd = 'AsyncRun'
hook_add = '''
  let g:asyncrun_open = 6
  nnoremap <silent> <C-c> :AsyncStop <CR>
  augroup MyAsyncRun
    autocmd!
    autocmd FileType python nnoremap <silent> <C-q> :AsyncRun python -u %<CR>
    autocmd FileType python vnoremap <silent> <C-q> :%AsyncRun python -u<CR>
    command! -nargs=0 Pytest :AsyncRun pytest "%"
  augroup END
'''

# viewer for LSP symbols
[[plugins]]
repo = 'liuchengxu/vista.vim'
depends = ['vim-lsp']
hook_add = '''
  let g:vista_close_on_jump = 1
  let g:vista#renderer#enable_icon = 1
  let g:vista_default_executive = 'vim_lsp'
  nnoremap <silent> <leader>v :<C-u>Vista!!<CR>
  autocmd vimrc BufEnter * if (&filetype == 'vista' || &filetype == 'vista_kind') && winnr('$') == 1 | q | endif
'''

[[plugins]]
repo = 'rhysd/accelerated-jk'
on_map = {n = '<Plug>'}
hook_add = '''
  nmap <silent>j <Plug>(accelerated_jk_gj)
  nmap <silent>k <Plug>(accelerated_jk_gk)
'''
